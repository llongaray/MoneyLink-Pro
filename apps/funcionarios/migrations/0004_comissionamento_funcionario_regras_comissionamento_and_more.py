# Generated by Django 5.1 on 2025-04-30 09:28

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('funcionarios', '0003_alter_arquivofuncionario_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comissionamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Um nome descritivo para esta regra de comissionamento.', max_length=255, verbose_name='Título da Regra')),
                ('escopo_base', models.CharField(choices=[('GERAL', 'Geral (Valor Total)'), ('EMPRESA', 'Por Empresa(s)'), ('DEPARTAMENTO', 'Por Departamento'), ('SETOR', 'Por Setor'), ('EQUIPE', 'Por Equipe'), ('PESSOAL', 'Individual (Pessoal)')], default='PESSOAL', help_text="Define como o valor base para o cálculo da comissão é determinado: 'Geral' usa um valor total; 'Empresa' soma valores da(s) empresa(s) vinculada(s); 'Departamento', 'Setor', 'Equipe' somam valores da respectiva entidade; 'Pessoal' considera apenas o valor individual do funcionário.", max_length=20, verbose_name='Escopo da Base de Cálculo')),
                ('percentual', models.DecimalField(blank=True, decimal_places=2, help_text='Percentual da comissão aplicado sobre o valor base (Ex: 5.00 para 5%).', max_digits=5, null=True, verbose_name='Percentual (%)')),
                ('valor_fixo', models.DecimalField(blank=True, decimal_places=2, help_text='Valor fixo da comissão, independente do valor base (pode ser usado para metas atingidas).', max_digits=12, null=True, verbose_name='Valor Fixo (R$)')),
                ('valor_de', models.DecimalField(blank=True, decimal_places=2, help_text='Valor base inicial da faixa para cálculo da comissão.', max_digits=12, null=True, verbose_name='Valor Base De (para faixas)')),
                ('valor_ate', models.DecimalField(blank=True, decimal_places=2, help_text='Valor base final da faixa para cálculo da comissão.', max_digits=12, null=True, verbose_name='Valor Base Até (para faixas)')),
                ('status', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_inicio', models.DateField(blank=True, help_text='Data a partir da qual esta regra se torna válida.', null=True, verbose_name='Data de Início da Vigência')),
                ('data_fim', models.DateField(blank=True, help_text='Data até a qual esta regra é válida (deixe em branco se não houver data de término).', null=True, verbose_name='Data de Fim da Vigência')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('departamentos', models.ManyToManyField(blank=True, help_text='Selecione os departamentos onde esta regra se aplica. Filtra dentro das empresas selecionadas (se houver).', related_name='regras_comissionamento', to='funcionarios.departamento', verbose_name='Departamentos Aplicáveis')),
                ('empresas', models.ManyToManyField(blank=True, help_text='Selecione as empresas onde esta regra se aplica. Se vazio, pode aplicar-se a todas (dependendo de outros filtros).', related_name='regras_comissionamento', to='funcionarios.empresa', verbose_name='Empresas Aplicáveis')),
                ('equipes', models.ManyToManyField(blank=True, help_text='Selecione as equipes onde esta regra se aplica. Filtra dentro dos filtros anteriores (se houver).', related_name='regras_comissionamento', to='funcionarios.equipe', verbose_name='Equipes Aplicáveis')),
                ('setores', models.ManyToManyField(blank=True, help_text='Selecione os setores onde esta regra se aplica. Filtra dentro dos departamentos selecionados (se houver).', related_name='regras_comissionamento', to='funcionarios.setor', verbose_name='Setores Aplicáveis')),
            ],
            options={
                'verbose_name': 'Regra de Comissionamento',
                'verbose_name_plural': 'Regras de Comissionamento',
                'ordering': ['-status', '-data_criacao', 'titulo'],
            },
        ),
        migrations.AddField(
            model_name='funcionario',
            name='regras_comissionamento',
            field=models.ManyToManyField(blank=True, help_text='Selecione as regras de comissionamento que se aplicam especificamente a este funcionário. Estas podem complementar ou sobrescrever regras gerais.', related_name='funcionarios_aplicaveis', to='funcionarios.comissionamento', verbose_name='Regras de Comissionamento Específicas'),
        ),
        migrations.AddConstraint(
            model_name='comissionamento',
            constraint=models.CheckConstraint(condition=models.Q(('data_fim__isnull', True), ('data_fim__gte', models.F('data_inicio')), _connector='OR'), name='data_fim_maior_igual_data_inicio'),
        ),
        migrations.AddConstraint(
            model_name='comissionamento',
            constraint=models.CheckConstraint(condition=models.Q(('valor_de__isnull', True), ('valor_ate__isnull', True), ('valor_ate__gt', models.F('valor_de')), _connector='OR'), name='valor_ate_maior_que_valor_de'),
        ),
    ]
